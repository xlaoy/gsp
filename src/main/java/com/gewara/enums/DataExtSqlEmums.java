package com.gewara.enums;

/**
 * 
 * @author Zhicheng.Peng   Johnny.Resurgam@Gmail.com
 *  
 *  Aug 1, 2013  11:45:29 AM
 */
public enum DataExtSqlEmums {
	IDSSYNCORDER("IDSSYNCORDER",
							"SELECT RECORDID FROM " +
							"WEBDATA.view4js_ticket_order o " +
							"WHERE o.ORDER_TYPE = ? AND o.SETTLE = 'Y' " +
								"AND o.UPDATETIME >= ? AND o.UPDATETIME < ? AND o.STATUS IN ('paid_success','paid_return')"),
	IDSSYNCGOODS("IDSSYNCGOODS",
			"SELECT RECORDID FROM " +
			"WEBDATA.view4js_ticket_order o " +
			"WHERE o.ORDER_TYPE = ? AND o.CATEGORY = 'goods' " +
				"AND o.UPDATETIME >= ? AND o.UPDATETIME < ? AND o.STATUS IN ('paid_success','paid_return')"),
	MAPSSYNCORDER("MAPSSYNCORDER",
							"SELECT RECORDID,TRADE_NO, CATEGORY, DESCRIPTION2, STATUS, " +
										"ORDER_TYPE, CINEMAID, RELATEDID, MOVIEID, ADDTIME, " +
										"PLAYTIME, QUANTITY, TOTALCOST, HFHPASS, OTHERINFO, UPDATETIME, discount, wabi, ALIPAID, GEWAPAID, otherfee " +
							  "FROM WEBDATA.view4js_ticket_order o " +
							  "WHERE o.RECORDID IN ({in})"),
	IDSSYNCREFUND("IDSSYNCREFUND",
							" SELECT RECORDID " +
							"FROM WEBDATA.VIEW_ORDER_REFUND o " +
							"WHERE o.REFUNDTIME >= ? and o.REFUNDTIME < ? " +
								"and (o.ticketrefund in ('Y_NORMAL_R', 'Y_MERCHANT_R', 'Y_MERCHANT_N') OR refundtype in ('supplement','part'))  " +
								"and o.status = 'finish' and orderstatus = 'paid_success'"),
	
	MAPSYNCREFUND("MAPSYNCREFUND",
			" SELECT o.TRADENO, o.PLACEID,o.ORDERTYPE, o.ORDERTYPE, o.REFUNDTIME, o.OLDSETTLE, " +
				"o.NEWSETTLE, t.RELATEDID,t.PLAYTIME,t.CATEGORY, t.QUANTITY,o.APPLYINFO, o.DEALINFO, t.DESCRIPTION2 " +
			"FROM WEBDATA.VIEW_ORDER_REFUND o, WEBDATA.view4js_ticket_order t " +
			"WHERE t.TRADE_NO = o.TRADENO AND o.RECORDID IN ({in})"),	
								  
	MAPSYNCPLACE("MAPSYNCPLACE",
							" SELECT RECORDID, NAME, BRANDNAME, CITYCODE,UPDATETIME,C.OPENTYPE, C.pcid " +
							"FROM WEBDATA.VIEW_CINEMA C, WEBDATA.VIEW_CINEMAPROFILE P " +
							"WHERE C.RECORDID=P.CINEMAID " +
							"AND EXISTS(SELECT 1 FROM WEBDATA.view4js_ticket_order o WHERE o.CINEMAID = C.RECORDID)"),
							

	MAPSYNCPLAYITEM("MAPSYNCPLAYITEM",
							"SELECT S.MPID, S.UPDATETIME, s.PLAYTIME, T.ACTUALPRICE, S.CINEMAID, S.MOVIENAME, S.ROOMNAME " +
							"FROM WEBDATA.VIEW_OPEN_PLAYITEM S " +
								"INNER JOIN  WEBDATA.VIEW_OPEN_PLAYITEM_EXT T ON T.MPID=S.MPID " +
							"WHERE T.ACTUALPRICE > 0 AND S.UPDATETIME >=? AND S.UPDATETIME < ?"),
	
	MAPSYNCSETTLECONFIG("MAPSYNCSETTLECONFIG"," SELECT CINEMA_ID,ACCOUNT_ID,CINEMA_NAME_LONG,SETTLEMENT_WAY,SETTLEMENT_POINT,SETTLEMENT_DATE,SETTLEMENT_CYCLE,CYCLE_ONE,CYCLE_TWO,SUPPLIER_ID " +
											  " FROM WEBDATA.VIEW_CINEMA_CONTRACT WHERE UPDATE_TIME >=? AND UPDATE_TIME < ?"),
	
//	MAPSYNCCHANNELCONFIG("MAPSYNCCHANNELCONFIG"," SELECT CHANNEL_TYPE,CHANNEL_ID,CINEMA_ID,IS_CHARGE,SERVICE_FEE_TYPE,SERVICE_FEE,END_TIME,UPDATE_TIME,OPERATION_TYPE FROM " +
//			"WEBDATA.VIEW_CINEMA_CHARGECHANNEL T WHERE UPDATE_TIME >=? AND UPDATE_TIME < ? and CHANNEL_ID in ({in})");
	MAPSYNCCHANNELCONFIG("MAPSYNCCHANNELCONFIG"," SELECT CHANNEL_TYPE,CHANNEL_ID,CINEMA_ID,IS_CHARGE,SERVICE_FEE_TYPE,SERVICE_FEE,END_TIME,UPDATE_TIME,OPERATION_TYPE FROM " +
			"WEBDATA.VIEW_CINEMA_CHARGECHANNEL T WHERE CHANNEL_TYPE = 'ÔºÏß' AND STATUS=3 AND  UPDATE_TIME >=? AND UPDATE_TIME < ?"),
	
	MAPSYSDIFFPRICEORDER(
			"MAPSYSDIFFPRICEORDER", 
			"select sso.TRADE_NO, sso.MPID, sso.QUANTITY, sso.COSTPRICE, sso.UPDATETIME " +
			"from WEBDATA.VIEW_SPECIFIC_SETTLE_ORDER sso " +
			"where sso.UPDATETIME >= ? " +
			"and sso.UPDATETIME < ? "),
	
	SYSBAOCHANG(
			"SYSBAOCHANG", 
			"SELECT  v.CINEMAID, v.RECORDID, v.MPID, v.OPENTYPE, v.TYPE, v.MOVIENAME, v.PLAYTIME, v.SEATNUM, v.AMOUNT, v.UPDATETIME, v.ROOMNAME, v.PREAMOUNT, v.PREPAY, " +
			"v.GOODSAMOUNT, v.GOODSMONEY " + 
			"from WEBDATA.VIEW_BAOCHANG_OPI v where v.UPDATETIME >= ? and v.UPDATETIME < ? and v.ISBAOCHANG = 'Y' ");
	
	private String tag;
	private String sql;
	private DataExtSqlEmums(String tag, String sql){
		this.tag = tag;
		this.sql = sql;
	}
	/**
	 * @return the tag
	 */
	public String getTag() {
		return tag;
	}
	/**
	 * @return the sql
	 */
	public String getSql() {
		return sql;
	}
}
